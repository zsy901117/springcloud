<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sg.mapper.Zuul_routeMapper">

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="com.sg.entity.Zuul_route">
		<id column="id" property="id" />
		<result column="path" property="path" />
		<result column="service_id" property="service_id" />
		<result column="url" property="url" />
		<result column="retryable" property="retryable" />
		<result column="enabled" property="enabled" />
		<result column="strip_prefix" property="strip_prefix" />
		<result column="api_name" property="api_name" />
	</resultMap>

	<!-- 通用查询结果列 -->
	<sql id="Base_Column_List">
		id, path, service_id, url, retryable, enabled,
		strip_prefix, api_name
	</sql>

	<insert id="insert" parameterType="Zuul_route">
		insert into zuul_route
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null "> id,</if>
			<if test="path != null "> path,</if>
			<if test="service_id != null "> service_id,</if>
			<if test="url != null "> url,</if>
			<if test="retryable != null "> retryable,</if>
			<if test="enabled != null "> enabled,</if>
			<if test="strip_prefix != null "> strip_prefix,</if>
			<if test="api_name != null "> api_name,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null "> #{id},</if>
			<if test="path != null "> #{path},</if>
			<if test="service_id != null "> #{service_id},</if>
			<if test="url != null "> #{url},</if>
			<if test="retryable != null "> #{retryable},</if>
			<if test="enabled != null "> #{enabled},</if>
			<if test="strip_prefix != null "> #{strip_prefix},</if>
			<if test="api_name != null "> #{api_name},</if>
		</trim>
	</insert>
	<delete id="deleteById" parameterType="String">
		delete from zuul_route
		where id = #{id}
	</delete>
	<delete id="deleteByids" parameterType="String">
		delete from zuul_route where id in
		<foreach item="id" collection="array" open="(" separator=","
			close=")">
			#{id}
		</foreach>
	</delete>
	<update id="update" parameterType="Zuul_route">
		update zuul_route
		<trim prefix="SET" suffixOverrides=",">
			<if test="path != null "> path = #{path},</if>
			<if test="service_id != null "> service_id = #{service_id},</if>
			<if test="url != null "> url = #{url},</if>
			<if test="retryable != null "> retryable = #{retryable},</if>
			<if test="enabled != null "> enabled = #{enabled},</if>
			<if test="strip_prefix != null "> strip_prefix = #{strip_prefix},</if>
			<if test="api_name != null "> api_name = #{api_name},</if>
		</trim>
		where id= #{id}
	</update>
	<select id="selectList" parameterType="Zuul_route"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from zuul_route
		<where>
			<if test="id != null "> and id = #{id}</if>
			<if test="path != null "> and path = #{path}</if>
			<if test="service_id != null "> and service_id = #{service_id}</if>
			<if test="url != null "> and url = #{url}</if>
			<if test="retryable != null "> and retryable = #{retryable}</if>
			<if test="enabled != null "> and enabled = #{enabled}</if>
			<if test="strip_prefix != null "> and strip_prefix = #{strip_prefix}</if>
			<if test="api_name != null "> and api_name = #{api_name}</if>
		</where>
	</select>
	<select id="selectById" parameterType="String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from zuul_route where id=#{id}
	</select>
	<select id="routeCount" resultType="int">
		select count(1) from
		zuul_route
		where enabled = 1
	</select>
	<select id="page" parameterType="com.sg.query.RouteQuery"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from zuul_route
		<where>
			<if test="service_id != null and service_id != ''">
				service_id like concat('%', #{service_id}, '%')
			</if>
		</where>
	</select>
</mapper>
